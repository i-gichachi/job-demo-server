"""empty message

Revision ID: f5259ffa52ab
Revises: 
Create Date: 2023-12-07 12:14:59.080000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f5259ffa52ab'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.Column('firstname', sa.String(length=64), nullable=True),
    sa.Column('secondname', sa.String(length=64), nullable=True),
    sa.Column('surname', sa.String(length=64), nullable=True),
    sa.Column('address', sa.String(length=128), nullable=True),
    sa.Column('phone_number', sa.String(length=9), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('gender', sa.String(length=50), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contact_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('contact_requests', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_contact_requests_timestamp'), ['timestamp'], unique=False)

    op.create_table('employers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(length=120), nullable=True),
    sa.Column('company_image', sa.String(length=255), nullable=True),
    sa.Column('company_description', sa.String(length=1000), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobseekers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resume', sa.String(length=255), nullable=True),
    sa.Column('profile_status', sa.String(length=120), nullable=True),
    sa.Column('availability', sa.String(length=120), nullable=True),
    sa.Column('job_category', sa.String(length=120), nullable=True),
    sa.Column('salary_expectations', sa.String(length=120), nullable=True),
    sa.Column('file_approval_status', sa.String(length=50), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=500), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobpostings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('responsibilities', sa.String(length=500), nullable=True),
    sa.Column('instructions', sa.String(length=500), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('salary_range', sa.String(length=255), nullable=True),
    sa.Column('qualifications', sa.String(length=500), nullable=True),
    sa.Column('job_type', sa.String(length=120), nullable=True),
    sa.Column('employer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employer_id'], ['employers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('jobpostings')
    op.drop_table('notifications')
    op.drop_table('jobseekers')
    op.drop_table('employers')
    with op.batch_alter_table('contact_requests', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contact_requests_timestamp'))

    op.drop_table('contact_requests')
    op.drop_table('admins')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
